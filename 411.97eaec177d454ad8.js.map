{"version":3,"file":"411.97eaec177d454ad8.js","mappings":"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","names":["delay","scheduler","async","delayFor","value","Date","isNaN","absoluteDelay","now","Math","abs","source","lift","DelayOperator","constructor","this","call","subscriber","subscribe","DelaySubscriber","Subscriber","destination","super","queue","active","errored","state","length","time","shift","notification","observe","max","schedule","unsubscribe","_schedule","add","dispatch","scheduleNotification","message","DelayMessage","push","_next","Notification","_error","err","error","_complete","LayoutService","largeScreen","BehaviorSubject","hasOpenedRightSidebar","hasOpenedRightSidebar$","openedRightSidebar","asObservable","toggleRightSidebar","next","factory","i0","ctx_r3","oxw","ctx_r5","LayoutSelectorComponent","labService","LayoutMode","setMode","mode","setLayoutMode","isActive","layoutMode","layoutModeChanged","pipe","map","selectors","PlaygroundComponent","backgroundService","IconPosition","availablePositionsChanged","backgroundColorChanged","artboardSize","ImageHelper","background","getIcon","position","LabActionsComponent","renderer","IconType","ngOnInit","listenerFn","listen","e","composedPath","includes","exportDropdown","nativeElement","exportDropdownOpened","ngOnDestroy","saveToGallery","export","type","exportImage","ctx","Array","isArray","total","SkipSubscriber","count","x","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","PLATFORM_ID","ɵprov","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","matchMedia","bind","noopMatchMedia","query","has","createElement","setAttribute","head","appendChild","sheet","insertRule","console","createEmptyStyleRule","i1","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","complete","isMatched","queries","coerceArray","some","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","combineLatest","concat","take","SkipOperator","skip","debounceTime","breakpointStates","response","breakpoints","forEach","get","output","Observable","observer","handler","run","startWith","takeUntil","set","split","reduce","a1","a2","trim","ctx_r4","RecentlyUsedComponent","recentIconsChanged","trackIconsFn","_","item","id","setIcon","icon","ctx_r8","TabIconsComponent","iconService","categoryService","loadingService","fb","group","keyword","getIconFilters","categoryId","merge","getIcons","searchForm","valueChanges","destroyed$","filter","TextHelper","distinctUntilChanged","mergeMap","getCategories","DataHelper","controls","loadingSub","loading","loadingMap","environment","ctx_r10","TabBackgroundsComponent","getBackgrounds","IconHelper","trackBackgroundsFn","setBackground","clearBackground","clearPositionSetting","IconStyleService","styleChanged","style$","setStyle","style","i","IconStyleComponent","iconStyleService","TabStylesComponent","name","url","styles","trackStylesFn","RightSidebarComponent","breakpointObserver","layoutSevice","TabId","title","hasIconPosition$","hasBackgroundPosition$","MEDIA_QUERIES","isLargeScreen","el","r","classList","contains","onTabChange","tabId","activeTabId","ctx_r7","ctx_r9","routes","path","component","layoutService","positionChanged","switchMap","selectedIcon$","a","savedColorsChanged","FormControl","FormArray","selectedColorControls","selectedColors","filledElementsChanged","filledElements","clear","color","index","contol","initColorListener","iconChanged","clearColors","initIconNameHandler","unselectPositionListenerFn","unsetPosition","addToSaved","addToSavedColors","removeFromSaved","removeFromSavedColors","replaceSaved","colors","replaceSavedColors","control","setColor","iconName","artboardName","setValue","LabComponent","LabRoutingModule","RouterModule","LabModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./src/app/core/services/layout.service.ts","./src/app/modules/lab/layout-selector/layout-selector.component.html","./src/app/modules/lab/layout-selector/layout-selector.component.ts","./src/app/modules/lab/playground/playground.component.html","./src/app/modules/lab/playground/playground.component.ts","./src/app/modules/lab/lab-actions/lab-actions.component.ts","./src/app/modules/lab/lab-actions/lab-actions.component.html","./node_modules/@angular/cdk/fesm2015/coercion.mjs","./node_modules/rxjs/_esm2015/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2015/platform.mjs","./node_modules/@angular/cdk/fesm2015/layout.mjs","./src/app/modules/lab/right-sidebar/tab-icons/recently-used/recently-used.component.html","./src/app/modules/lab/right-sidebar/tab-icons/recently-used/recently-used.component.ts","./src/app/modules/lab/right-sidebar/tab-icons/tab-icons.component.html","./src/app/modules/lab/right-sidebar/tab-icons/tab-icons.component.ts","./src/app/modules/lab/right-sidebar/tab-backgrounds/tab-backgrounds.component.html","./src/app/modules/lab/right-sidebar/tab-backgrounds/tab-backgrounds.component.ts","./src/app/core/services/icon-style.service.ts","./src/app/modules/lab/right-sidebar/tab-styles/icon-style/icon-style.component.html","./src/app/modules/lab/right-sidebar/tab-styles/icon-style/icon-style.component.ts","./src/app/modules/lab/right-sidebar/tab-styles/tab-styles.component.html","./src/app/modules/lab/right-sidebar/tab-styles/tab-styles.component.ts","./src/app/modules/lab/right-sidebar/right-sidebar.component.html","./src/app/modules/lab/right-sidebar/right-sidebar.component.ts","./src/app/modules/lab/lab.component.html","./src/app/modules/lab/lab-routing.module.ts","./src/app/modules/lab/lab.component.ts","./src/app/modules/lab/lab.module.ts"],"sourcesContent":["import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  public readonly MEDIA_QUERIES = {\n    largeScreen: '(min-width: 1200px)',\n  };\n  public get hasOpenedRightSidebar() {\n    return this.hasOpenedRightSidebar$.value;\n  }\n  public get openedRightSidebar() {\n    return this.hasOpenedRightSidebar$.asObservable();\n  }\n  private hasOpenedRightSidebar$ = new BehaviorSubject<boolean>(false);\n\n  public toggleRightSidebar(state: boolean) {\n    if (this.hasOpenedRightSidebar === state) {\n      return;\n    }\n\n    this.hasOpenedRightSidebar$.next(state);\n  }\n}\n","<div class=\"d-flex flex-column\">\n  <span *ngFor=\"let mode of layoutModes; let i = index\"\n        class=\"icon icon-layout-{{mode}} layout mb-3\"\n        title=\"{{'Layout ' + (i + 1)}}\"\n        [class.active]=\"isActive(mode) | async\"\n        (click)=\"setMode(mode)\"\n        (keyup.enter)=\"setMode(mode)\"\n        tabindex=\"0\"></span>\n</div>\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { LabService } from '../../../core/services/lab.service';\nimport { LayoutMode } from '../../../models/enums/layout-mode';\n\n@Component({\n  selector: 'bd-layout-selector',\n  templateUrl: './layout-selector.component.html',\n  styleUrls: ['./layout-selector.component.scss'],\n})\nexport class LayoutSelectorComponent {\n  public layoutModes = [LayoutMode.Single, LayoutMode.BottomRight, LayoutMode.BottomLeft];\n\n  constructor(private readonly labService: LabService) {}\n\n  public setMode(mode: LayoutMode) {\n    this.labService.setLayoutMode(mode);\n  }\n\n  public isActive(layoutMode: LayoutMode) {\n    return this.labService.layoutModeChanged.pipe(map(({ mode }) => mode === layoutMode));\n  }\n}\n","<div class=\"playground-wrapper\"\n     [style.background-color]=\"backgroundColor$ | async\">\n  <div class=\"position-relative playground-body\"\n       [style.width.px]=\"artboardSize.width\"\n       [style.height.px]=\"artboardSize.height\">\n    <ng-container *ngFor=\"let position of (availablePositions$ | async)\">\n      <bd-playground-icon [icon]=\"getIcon(position) | async\"\n                          [position]=\"position\"\n                          [canRotate]=\"position !== IconPosition.Background\"></bd-playground-icon>\n    </ng-container>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { BackgroundService } from '../../../core/services/background.service';\nimport { LabService } from '../../../core/services/lab.service';\nimport { IconPosition } from '../../../models/enums/icon-position';\nimport { ImageHelper } from '../../../shared/helpers/image.helper';\n\n@Component({\n  selector: 'bd-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.scss'],\n})\nexport class PlaygroundComponent {\n  public IconPosition = IconPosition;\n  public availablePositions$ = this.labService.availablePositionsChanged;\n  public backgroundColor$ = this.backgroundService.backgroundColorChanged;\n  public get artboardSize() {\n    return ImageHelper.getArtboardSize(!!this.backgroundService.background);\n  }\n\n  constructor(private readonly labService: LabService, private readonly backgroundService: BackgroundService) {}\n\n  public getIcon(position: IconPosition) {\n    return this.labService.getIcon(position);\n  }\n}\n","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\n\nimport { LabService } from '../../../core/services/lab.service';\nimport { IconType } from '../../../models/enums/icon-type';\n\n@Component({\n  selector: 'bd-lab-actions',\n  templateUrl: './lab-actions.component.html',\n  styleUrls: ['./lab-actions.component.scss'],\n})\nexport class LabActionsComponent implements OnInit, OnDestroy {\n  @ViewChild('exportDropdown') public exportDropdown: ElementRef<HTMLDivElement>;\n\n  public exportDropdownOpened = false;\n  public IconType = IconType;\n  private listenerFn: () => void;\n\n  constructor(private readonly labService: LabService, private readonly renderer: Renderer2) {}\n\n  public ngOnInit() {\n    this.listenerFn = this.renderer.listen('window', 'click', (e: Event) => {\n      if (!e.composedPath().includes(this.exportDropdown.nativeElement)) {\n        this.exportDropdownOpened = false;\n      }\n    });\n  }\n\n  public ngOnDestroy() {\n    this.listenerFn();\n  }\n\n  public saveToGallery() {}\n\n  public export(type: IconType) {\n    this.labService.exportImage(type);\n  }\n}\n","<div class=\"d-flex justify-content-between p-3 lab-actions\">\n  <button class=\"btn\"\n          (click)=\"saveToGallery()\"\n          disabled>Save to Gallery</button>\n\n  <div class=\"dropdown dropdown-export\"\n       #exportDropdown>\n    <button class=\"btn btn-secondary dropdown-toggle\"\n            type=\"button\"\n            (click)=\"exportDropdownOpened = !exportDropdownOpened\">\n      Export\n    </button>\n    <ul class=\"dropdown-menu\"\n        [class.opened]=\"exportDropdownOpened\">\n      <li><a class=\"dropdown-item\"\n           (click)=\"export(IconType.Vector)\">Export SVG</a></li>\n      <li><a class=\"dropdown-item\"\n           (click)=\"export(IconType.Raster)\">Export PNG</a></li>\n    </ul>\n  </div>\n</div>\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","<h3 class=\"mb-2\">Recently used icons</h3>\n<section id=\"recently-used\"\n         class=\"d-flex align-items-center\">\n  <div class=\"d-flex align-items-center scroll\">\n    <bd-icon class=\"icon-wrapper\"\n             *ngFor=\"let icon of recentIcons$ | async as recentIcons; let i = index; trackBy: trackIconsFn\"\n             [icon]=\"icon\"\n             [title]=\"icon.name\"\n             (click)=\"setIcon(icon)\"></bd-icon>\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\nimport { LabService } from '../../../../../core/services/lab.service';\nimport { IconDto } from '../../../../../models/dto/icon-dto';\n\n@Component({\n  selector: 'bd-recently-used',\n  templateUrl: './recently-used.component.html',\n  styleUrls: ['./recently-used.component.scss'],\n})\nexport class RecentlyUsedComponent {\n  public recentIcons$ = this.labService.recentIconsChanged;\n\n  constructor(private readonly labService: LabService) {}\n\n  public trackIconsFn(_: number, item: IconDto) {\n    return item.id;\n  }\n\n  public setIcon(icon: IconDto) {\n    this.labService.setIcon(icon);\n  }\n}\n","<h2 class=\"dashed right\">Icon Library</h2>\n\n<form [formGroup]=\"searchForm\">\n  <bd-dropdown class=\"w-100 mb-3\"\n               placeholder=\"All Categories\"\n               formControlName=\"categoryId\"\n               [items]=\"categories$ | async\"\n               valueProp=\"id\"\n               labelProp=\"name\"></bd-dropdown>\n\n  <bd-search-input class=\"w-100 search-keyword\"\n                   placeholder=\"Search...\"\n                   formControlName=\"keyword\"></bd-search-input>\n</form>\n\n<span *ngIf=\"loading\"\n      class=\"spinner\"></span>\n\n<bd-recently-used></bd-recently-used>\n\n<ng-container *ngIf=\"(icons$ | async) as icons\">\n  <h3 class=\"mb-2\"\n      *ngIf=\"!loading\">{{icons.length}} {{DataHelper.hasUnit(icons.length) ? 'icon' : 'icons'}} available</h3>\n\n  <div class=\"icons-list-wrapper\">\n    <div class=\"d-flex flex-wrap icons-list\">\n      <div class=\"icon-item\"\n           *ngFor=\"let icon of icons; let i = index; trackBy: trackIconsFn\">\n        <bd-icon [icon]=\"icon\"\n                 [title]=\"icon.name\"\n                 (click)=\"setIcon(icon)\"></bd-icon>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { merge, Subject } from 'rxjs';\nimport { debounceTime, delay, distinctUntilChanged, filter, mergeMap, takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport { CategoryService } from '../../../../core/services/category.service';\nimport { IconService } from '../../../../core/services/icon.service';\nimport { LabService } from '../../../../core/services/lab.service';\nimport { LoadingService } from '../../../../core/services/loading.service';\nimport { IconDto } from '../../../../models/dto/icon-dto';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\nimport { TextHelper } from '../../../../shared/helpers/text.helper';\n\n@Component({\n  selector: 'bd-tab-icons',\n  templateUrl: './tab-icons.component.html',\n  styleUrls: ['./tab-icons.component.scss'],\n})\nexport class TabIconsComponent implements OnInit, OnDestroy {\n  public searchForm = this.fb.group({\n    keyword: this.iconService.getIconFilters().keyword,\n    categoryId: this.iconService.getIconFilters().categoryId,\n  });\n  public get keyword() {\n    return this.searchForm.controls.keyword;\n  }\n  public get categoryId() {\n    return this.searchForm.controls.categoryId;\n  }\n  public destroyed$ = new Subject<void>();\n  public icons$ = merge(\n    this.iconService.getIcons(this.searchForm.value),\n    merge(\n      this.keyword.valueChanges.pipe(\n        takeUntil(this.destroyed$),\n        filter((keyword: string) => !keyword || keyword.length !== 1),\n        debounceTime(TextHelper.DEFAULT_DEBOUNCE_TIME),\n        distinctUntilChanged()\n      ),\n      this.categoryId.valueChanges.pipe(takeUntil(this.destroyed$), distinctUntilChanged())\n    ).pipe(\n      delay(0), // wait until `this.searchForm` gets an updated value\n      mergeMap(() => this.iconService.getIcons(this.searchForm.value))\n    )\n  );\n  public loading = false;\n  public categories$ = this.categoryService.getCategories();\n  public DataHelper = DataHelper;\n\n  constructor(\n    private readonly iconService: IconService,\n    private readonly categoryService: CategoryService,\n    private readonly loadingService: LoadingService,\n    private readonly labService: LabService,\n    private readonly fb: FormBuilder\n  ) {}\n\n  public ngOnInit() {\n    this.loadingService.loadingSub\n      .pipe(takeUntil(this.destroyed$), delay(0))\n      .subscribe(\n        (loading) => (this.loading = loading && this.loadingService.loadingMap.has(`${environment.apiUrl}/icons`))\n      );\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public trackIconsFn(_: number, item: IconDto) {\n    return item.id;\n  }\n\n  public setIcon(icon: IconDto) {\n    this.labService.setIcon(icon);\n  }\n}\n","<h2 class=\"dashed right\">Backgrounds</h2>\n\n<span *ngIf=\"loading\"\n      class=\"spinner\"></span>\n\n<ng-container *ngIf=\"(backgrounds$ | async) as backgrounds\">\n  <h3 *ngIf=\"!loading\">{{backgrounds.length}} {{DataHelper.hasUnit(backgrounds.length) ? 'background' : 'backgrounds'}} available</h3>\n\n  <div class=\"backgrounds-list-wrapper\">\n    <div class=\"d-flex flex-wrap backgrounds-list\">\n      <button class=\"btn background-item\"\n              (click)=\"clearBackground()\">Clear</button>\n      <div class=\"background-item\"\n           *ngFor=\"let background of backgrounds; let i = index; trackBy: trackBackgroundsFn\">\n        <bd-icon [icon]=\"IconHelper.mapBackgroundToIcon(background)\"\n                 [large]=\"true\"\n                 [title]=\"background.name\"\n                 (click)=\"setBackground(background)\"></bd-icon>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { delay, takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport { BackgroundService } from '../../../../core/services/background.service';\nimport { LabService } from '../../../../core/services/lab.service';\nimport { LoadingService } from '../../../../core/services/loading.service';\nimport { BackgroundDto } from '../../../../models/dto/background-dto';\nimport { IconPosition } from '../../../../models/enums/icon-position';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\nimport { IconHelper } from '../../../../shared/helpers/icon.helper';\n\n@Component({\n  selector: 'bd-tab-backgrounds',\n  templateUrl: './tab-backgrounds.component.html',\n  styleUrls: ['./tab-backgrounds.component.scss'],\n})\nexport class TabBackgroundsComponent implements OnInit, OnDestroy {\n  public destroyed$ = new Subject<void>();\n  public backgrounds$ = this.backgroundService.getBackgrounds();\n  public loading = false;\n  public IconHelper = IconHelper;\n  public DataHelper = DataHelper;\n\n  constructor(\n    private readonly loadingService: LoadingService,\n    private readonly backgroundService: BackgroundService,\n    private readonly labService: LabService,\n  ) { }\n\n  public ngOnInit() {\n    this.loadingService.loadingSub\n      .pipe(takeUntil(this.destroyed$), delay(0))\n      .subscribe(\n        (loading) => (this.loading = loading && this.loadingService.loadingMap.has(`${environment.apiUrl}/backgrounds`))\n      );\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public trackBackgroundsFn(_: number, item: BackgroundDto) {\n    return item.id;\n  }\n\n  public setBackground(background: BackgroundDto) {\n    this.backgroundService.setBackground(background);\n  }\n\n  // TODO: improve\n  public clearBackground() {\n    this.backgroundService.setBackground(null);\n    this.labService.clearPositionSetting(IconPosition.Background);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { IconStyle } from '../../models/interfaces/icon-style';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconStyleService {\n  public get styleChanged() {\n    return this.style$.asObservable();\n  }\n\n  private style$ = new BehaviorSubject<IconStyle>(null);\n\n  public setStyle(style: IconStyle) {\n    if (this.isActive(style)) {\n      // the style is already active - do nothing\n      return;\n    }\n\n    this.style$.next(style);\n  }\n\n  public isActive(style: IconStyle) {\n    return this.style$.value?.id === style.id;\n  }\n}\n","<div *ngIf=\"style\"\n     class=\"d-flex align-items-end p-3 icon-style\"\n     [class.active]=\"isActive(style)\"\n     [style.background-image]=\"ImageHelper.getCssUrl(style.url)\"\n     tabindex=\"0\">\n  <h1 class=\"m-0\">{{style.name}}</h1>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { IconStyleService } from '../../../../../core/services/icon-style.service';\nimport { IconStyle } from '../../../../../models/interfaces/icon-style';\nimport { ImageHelper } from '../../../../../shared/helpers/image.helper';\n\n@Component({\n  selector: 'bd-icon-style',\n  templateUrl: './icon-style.component.html',\n  styleUrls: ['./icon-style.component.scss'],\n})\nexport class IconStyleComponent {\n  @Input() public style: IconStyle;\n  @Input() public active = false;\n  public ImageHelper = ImageHelper;\n\n  constructor(private readonly iconStyleService: IconStyleService) {}\n\n  public isActive(style: IconStyle) {\n    return this.iconStyleService.isActive(style);\n  }\n}\n","<h2 class=\"dashed right\">Icon Styles</h2>\n\n<ng-container *ngIf=\"styles\">\n  <h3>{{styles.length}} {{DataHelper.hasUnit(styles.length) ? 'style' : 'styles'}} available</h3>\n\n  <div class=\"styles-list-wrapper\">\n    <div class=\"d-flex flex-wrap styles-list\">\n      <div class=\"mb-2 style-item\"\n           *ngFor=\"let style of styles; let i = index; trackBy: trackStylesFn\">\n        <bd-icon-style [style]=\"style\"\n                       [active]=\"true\"\n                       (click)=\"setStyle(style)\"></bd-icon-style>\n      </div>\n      <div class=\"d-flex justify-content-center align-items-center style-item style-item-more\">\n        <h3 class=\"m-0\">More styles are coming Soon...</h3>\n      </div>\n\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { IconStyleService } from '../../../../core/services/icon-style.service';\n\nimport { IconStyle } from '../../../../models/interfaces/icon-style';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\n\n@Component({\n  selector: 'bd-tab-styles',\n  templateUrl: './tab-styles.component.html',\n  styleUrls: ['./tab-styles.component.scss'],\n})\nexport class TabStylesComponent implements OnInit {\n  public styles: IconStyle[] = [\n    {\n      id: 'some-id',\n      name: 'Bubbly Icons',\n      url: `${environment.imgUrl}/styles/bubbly-icons.png`,\n    },\n  ];\n  public DataHelper = DataHelper;\n\n  constructor(private readonly iconStyleService: IconStyleService) {}\n\n  public ngOnInit() {\n    // TODO: check if we still need this\n    this.setStyle(this.styles[0]);\n  }\n\n  public trackStylesFn(_: number, item: IconStyle) {\n    return item.id;\n  }\n\n  public setStyle(style: IconStyle) {\n    this.iconStyleService.setStyle(style);\n  }\n}\n","<aside class=\"d-flex flex-column sidebar-wrapper\"\n       (click)=\"toggleRightSidebar(true)\">\n  <div class=\"content-wrapper flex-shrink-1\">\n    <ng-container *ngIf=\"(hasIconPosition$ | async) || (hasBackgroundPosition$ | async); else selectStyles\">\n      <bd-tab-icons *ngIf=\"hasIconPosition$ | async\"></bd-tab-icons>\n      <bd-tab-backgrounds *ngIf=\"hasBackgroundPosition$ | async\"></bd-tab-backgrounds>\n    </ng-container>\n    <ng-template #selectStyles>\n      <bd-tab-styles></bd-tab-styles>\n    </ng-template>\n  </div>\n</aside>\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, HostBinding, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { LabService } from '../../../core/services/lab.service';\n\nimport { LayoutService } from '../../../core/services/layout.service';\nimport { IconPosition } from '../../../models/enums/icon-position';\nimport { TabId } from '../../../models/enums/tab-id';\nimport { NavTab } from '../../../models/interfaces/nav-tab';\n\n@Component({\n  selector: 'bd-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n})\nexport class RightSidebarComponent implements OnInit, OnDestroy {\n  @HostBinding('class.right-sidebar') private hostClass = true;\n\n  public labTabs: NavTab[] = [\n    {\n      id: TabId.Icons,\n      title: 'Icons',\n      active: true,\n    },\n    {\n      id: TabId.Avatars,\n      title: 'Avatars',\n    },\n  ];\n  public activeTabId: TabId;\n  public TabId = TabId;\n  public hasIconPosition$ = this.labService.hasIconPosition$;\n  public hasBackgroundPosition$ = this.labService.hasBackgroundPosition$;\n  private isLargeScreen = this.breakpointObserver.isMatched(this.layoutSevice.MEDIA_QUERIES.largeScreen);\n  private destroyed$ = new Subject<void>();\n  private listenerFn: () => void;\n\n  constructor(\n    private readonly breakpointObserver: BreakpointObserver,\n    private readonly renderer: Renderer2,\n    private readonly layoutSevice: LayoutService,\n    private readonly labService: LabService\n  ) {}\n\n  public ngOnInit() {\n    this.listenerFn = this.renderer.listen('window', 'click', (e: Event) => {\n      if (\n        !this.isLargeScreen &&\n        !e.composedPath().some((el) => (el as Element)?.classList?.contains('right-sidebar'))\n      ) {\n        this.layoutSevice.toggleRightSidebar(false);\n      }\n    });\n\n    this.breakpointObserver\n      .observe(this.layoutSevice.MEDIA_QUERIES.largeScreen)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((state) => {\n        this.isLargeScreen = state.matches;\n        this.layoutSevice.toggleRightSidebar(this.isLargeScreen);\n      });\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n    this.listenerFn();\n  }\n\n  public onTabChange(tabId: TabId) {\n    this.activeTabId = tabId;\n  }\n\n  public toggleRightSidebar(state: boolean) {\n    this.layoutSevice.toggleRightSidebar(state);\n  }\n}\n","<div class=\"d-flex justify-content-between align-items-stretch position-relative overflow-hidden lab-viewport\">\n  <div class=\"d-flex flex-column justify-content-between flex-grow-1 lab-wrapper\"\n       [class.has-opened-sidebar]=\"hasOpenedRightSidebar$ | async\">\n    <bd-text-input [formControl]=\"iconName\"\n                   placeholder=\"Please enter the icon name...\"\n                   cssClass=\"w-100\"></bd-text-input>\n\n    <div class=\"d-flex align-items-center\">\n      <bd-layout-selector class=\"layout-selector\"></bd-layout-selector>\n      <bd-playground class=\"playground\"></bd-playground>\n\n      <div class=\"d-flex flex-column flex-grow-1\">\n        <ng-container *ngIf=\"hasSelectedIcon$ | async\">\n          <h3 class=\"dashed right color-picker-heading\">Selection Colors</h3>\n\n          <ng-container *ngIf=\"hasSelectedVectorIcon$ | async; else rasterIconInfo\">\n            <bd-color-picker *ngFor=\"let selectedColor of selectedColorControls\"\n                             class=\"mb-2\"\n                             [formControl]=\"selectedColor\"\n                             [savedColors]=\"savedColors$ | async\"\n                             (addToSaved)=\"addToSaved(selectedColor.value)\"\n                             (removeFromSaved)=\"removeFromSaved(selectedColor.value)\"\n                             (savedColorsChanged)=\"replaceSaved($event)\"></bd-color-picker>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"(hasBackgroundPosition$ | async) === false && (hasSelectedIcon$ | async) === false\">\n          <span class=\"font-italic icon-info-text\">Select the icon you want to change.</span>\n        </ng-container>\n\n        <ng-template #rasterIconInfo>\n          <span class=\"font-weight-bold icon-info-text\">Raster icons cannot be modified.</span>\n        </ng-template>\n      </div>\n    </div>\n\n    <bd-lab-actions></bd-lab-actions>\n\n    <!-- TODO: Remove preview container -->\n    <div class=\"position-absolute d-inline-block lab-wrapper-preview\"\n         style=\"opacity: 0.5\"></div>\n\n    <bd-footer class=\"d-flex d-xl-none mx-auto\"\n               [showLogo]=\"true\"></bd-footer>\n  </div>\n\n  <bd-right-sidebar [class.sidebar-hidden]=\"(hasOpenedRightSidebar$ | async) === false\"></bd-right-sidebar>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LabComponent } from './lab.component';\n\nconst routes: Routes = [{ path: '', component: LabComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LabRoutingModule { }\n","import { Component, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FormArray, FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { delay, filter, map, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { BackgroundService } from '../../core/services/background.service';\nimport { LabService } from '../../core/services/lab.service';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { IconType } from '../../models/enums/icon-type';\n\n@Component({\n  selector: 'bd-lab',\n  templateUrl: './lab.component.html',\n  styleUrls: ['./lab.component.scss'],\n})\nexport class LabComponent implements OnInit, OnDestroy {\n  public selectedIcon$ = this.labService.positionChanged.pipe(\n    switchMap((position) => this.labService.getIcon(position))\n  );\n  public hasSelectedIcon$ = this.selectedIcon$.pipe(map((icon) => !!icon));\n  public hasSelectedVectorIcon$ = this.selectedIcon$.pipe(map((icon) => icon?.type === IconType.Vector));\n  public hasBackgroundPosition$ = this.labService.hasBackgroundPosition$;\n  public savedColors$ = this.labService.savedColorsChanged;\n  public get selectedColorControls() {\n    return this.selectedColors.controls as FormControl[];\n  }\n  public iconName = new FormControl();\n  public backgroundColor$ = this.backgroundService.backgroundColorChanged;\n  // we cannot use [class.xxx] binding in the right sidebar, as we deal with the host element there\n  public hasOpenedRightSidebar$ = this.layoutService.openedRightSidebar.pipe(delay(0));\n  private selectedColors = new FormArray([]);\n  private destroyed$ = new Subject<void>();\n  private unselectPositionListenerFn: () => void;\n\n  constructor(\n    private readonly labService: LabService,\n    private readonly backgroundService: BackgroundService,\n    private readonly layoutService: LayoutService,\n    private readonly renderer: Renderer2\n  ) { }\n\n  public ngOnInit() {\n    this.labService.filledElementsChanged\n      .pipe(\n        takeUntil(this.destroyed$),\n        filter((filledElements) => !!filledElements)\n      )\n      .subscribe((filledElements) => {\n        this.selectedColors.clear();\n\n        filledElements.forEach(({ color, index }) => {\n          const contol = new FormControl(color);\n\n          this.selectedColors.push(contol);\n          this.initColorListener(contol, index);\n        });\n      });\n\n    this.labService.iconChanged.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      this.labService.clearColors();\n    });\n\n    this.initIconNameHandler();\n\n    this.unselectPositionListenerFn = this.renderer.listen('window', 'keydown.escape', () => {\n      this.labService.unsetPosition();\n    });\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n    this.unselectPositionListenerFn();\n  }\n\n  public addToSaved(color: string) {\n    this.labService.addToSavedColors(color);\n  }\n\n  public removeFromSaved(color: string) {\n    this.labService.removeFromSavedColors(color);\n  }\n\n  public replaceSaved(colors: string[]) {\n    this.labService.replaceSavedColors(colors);\n  }\n\n  private initColorListener(control: FormControl, index: string) {\n    control.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((color: string) => this.labService.setColor(color, index));\n  }\n\n  private initIconNameHandler() {\n    this.iconName.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((iconName) => (this.labService.artboardName = iconName));\n    this.iconName.setValue('icon-name');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LabRoutingModule } from './lab-routing.module';\nimport { LabComponent } from './lab.component';\nimport { RightSidebarComponent } from './right-sidebar/right-sidebar.component';\nimport { PlaygroundComponent } from './playground/playground.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { TabIconsComponent } from './right-sidebar/tab-icons/tab-icons.component';\nimport { TabAvatarsComponent } from './right-sidebar/tab-avatars/tab-avatars.component';\nimport { LayoutSelectorComponent } from './layout-selector/layout-selector.component';\nimport { RecentlyUsedComponent } from './right-sidebar/tab-icons/recently-used/recently-used.component';\nimport { LabActionsComponent } from './lab-actions/lab-actions.component';\nimport { TabBackgroundsComponent } from './right-sidebar/tab-backgrounds/tab-backgrounds.component';\nimport { TabStylesComponent } from './right-sidebar/tab-styles/tab-styles.component';\nimport { IconStyleComponent } from './right-sidebar/tab-styles/icon-style/icon-style.component';\n\n@NgModule({\n  declarations: [\n    LabComponent,\n    RightSidebarComponent,\n    PlaygroundComponent,\n    TabIconsComponent,\n    TabBackgroundsComponent,\n    TabAvatarsComponent,\n    LayoutSelectorComponent,\n    RecentlyUsedComponent,\n    LabActionsComponent,\n    TabStylesComponent,\n    IconStyleComponent,\n  ],\n  imports: [CommonModule, LabRoutingModule, SharedModule],\n})\nexport class LabModule {}\n"]}