{"version":3,"sources":["webpack:///node_modules/rxjs/_esm2015/internal/operators/delay.js","webpack:///node_modules/rxjs/_esm2015/internal/util/isDate.js","webpack:///src/app/core/services/layout.service.ts","webpack:///src/app/modules/lab/layout-selector/layout-selector.component.html","webpack:///src/app/modules/lab/layout-selector/layout-selector.component.ts","webpack:///src/app/modules/lab/playground/playground.component.html","webpack:///src/app/modules/lab/playground/playground.component.ts","webpack:///src/app/modules/lab/lab-actions/lab-actions.component.ts","webpack:///src/app/modules/lab/lab-actions/lab-actions.component.html","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/skip.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///src/app/modules/lab/right-sidebar/tab-icons/recently-used/recently-used.component.html","webpack:///src/app/modules/lab/right-sidebar/tab-icons/recently-used/recently-used.component.ts","webpack:///src/app/modules/lab/right-sidebar/tab-icons/tab-icons.component.html","webpack:///src/app/modules/lab/right-sidebar/tab-icons/tab-icons.component.ts","webpack:///src/app/modules/lab/right-sidebar/tab-backgrounds/tab-backgrounds.component.html","webpack:///src/app/modules/lab/right-sidebar/tab-backgrounds/tab-backgrounds.component.ts","webpack:///src/app/core/services/icon-style.service.ts","webpack:///src/app/modules/lab/right-sidebar/tab-styles/icon-style/icon-style.component.html","webpack:///src/app/modules/lab/right-sidebar/tab-styles/icon-style/icon-style.component.ts","webpack:///src/app/modules/lab/right-sidebar/tab-styles/tab-styles.component.html","webpack:///src/app/modules/lab/right-sidebar/tab-styles/tab-styles.component.ts","webpack:///src/app/modules/lab/right-sidebar/right-sidebar.component.html","webpack:///src/app/modules/lab/right-sidebar/right-sidebar.component.ts","webpack:///src/app/modules/lab/lab.component.html","webpack:///src/app/modules/lab/lab-routing.module.ts","webpack:///src/app/modules/lab/lab.component.ts","webpack:///src/app/modules/lab/lab.module.ts"],"names":["delay","value","scheduler","a","delayFor","Date","isNaN","now","Math","abs","source","lift","DelayOperator","LayoutService","this","subscriber","subscribe","destination","super","queue","active","errored","add","schedule","dispatch","notification","message","DelayMessage","push","_schedule","scheduleNotification","Notification","createNext","err","error","unsubscribe","createComplete","state","length","time","shift","observe","max","Subscriber","MEDIA_QUERIES","largeScreen","hasOpenedRightSidebar$","BehaviorSubject","hasOpenedRightSidebar","next","asObservable","LayoutSelectorComponent","labService","layoutModes","Single","BottomRight","BottomLeft","mode","setLayoutMode","layoutMode","layoutModeChanged","pipe","map","PlaygroundComponent","LabActionsComponent","backgroundService","IconPosition","availablePositions$","availablePositionsChanged","backgroundColor$","backgroundColorChanged","position","getIcon","getArtboardSize","background","renderer","exportDropdownOpened","IconType","listenerFn","listen","e","composedPath","includes","exportDropdown","nativeElement","type","exportImage","saveToGallery","coerceArray","Array","isArray","hasV8BreakIterator","SkipOperator","total","count","x","Intl","v8BreakIterator","_a","Platform","mediaQueryStyleNode","MediaMatcher","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","t","ɵprov","factory","token","providedIn","mediaQueriesForWebkitCompatibility","Set","_platform","_matchMedia","matchMedia","bind","noopMatchMedia","query","has","createElement","setAttribute","head","appendChild","sheet","insertRule","console","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","complete","splitQueries","some","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","combineLatest","concat","take","debounceTime","breakpointStates","response","breakpoints","forEach","get","output","Observable","observer","handler","run","startWith","takeUntil","set","queries","split","reduce","a1","a2","trim","RecentlyUsedComponent","recentIcons$","recentIconsChanged","_","item","id","icon","setIcon","TabIconsComponent","iconService","categoryService","loadingService","fb","searchForm","group","keyword","getIconFilters","categoryId","destroyed$","icons$","merge","getIcons","valueChanges","filter","DEFAULT_DEBOUNCE_TIME","distinctUntilChanged","mergeMap","loading","categories$","getCategories","DataHelper","loadingSub","loadingMap","environment","apiUrl","controls","IconStyleService","TabBackgroundsComponent","backgrounds$","getBackgrounds","IconHelper","setBackground","clearPositionSetting","Background","style$","style","isActive","IconStyleComponent","iconStyleService","ImageHelper","TabStylesComponent","styles","name","url","setStyle","RightSidebarComponent","breakpointObserver","layoutSevice","hostClass","labTabs","Icons","title","Avatars","TabId","hasIconPosition$","hasBackgroundPosition$","isLargeScreen","isMatched","el","classList","contains","toggleRightSidebar","tabId","activeTabId","LabComponent","LabRoutingModule","LabModule","routes","path","component","layoutService","selectedIcon$","positionChanged","switchMap","hasSelectedIcon$","hasSelectedVectorIcon$","Vector","savedColors$","savedColorsChanged","iconName","openedRightSidebar","selectedColors","filledElementsChanged","filledElements","clear","index","color","contol","initColorListener","iconChanged","clearColors","initIconNameHandler","unselectPositionListenerFn","unsetPosition","addToSavedColors","removeFromSavedColors","colors","replaceSavedColors","control","setColor","artboardName","setValue","forChild"],"mappings":"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","file":"x","sourcesContent":["import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  public readonly MEDIA_QUERIES = {\n    largeScreen: '(min-width: 1200px)',\n  };\n  public get hasOpenedRightSidebar() {\n    return this.hasOpenedRightSidebar$.value;\n  }\n  public get openedRightSidebar() {\n    return this.hasOpenedRightSidebar$.asObservable();\n  }\n  private hasOpenedRightSidebar$ = new BehaviorSubject<boolean>(false);\n\n  public toggleRightSidebar(state: boolean) {\n    if (this.hasOpenedRightSidebar === state) {\n      return;\n    }\n\n    this.hasOpenedRightSidebar$.next(state);\n  }\n}\n","<div class=\"d-flex flex-column\">\n  <span *ngFor=\"let mode of layoutModes; let i = index\"\n        class=\"icon icon-layout-{{mode}} layout mb-3\"\n        title=\"{{'Layout ' + (i + 1)}}\"\n        [class.active]=\"isActive(mode) | async\"\n        (click)=\"setMode(mode)\"\n        (keyup.enter)=\"setMode(mode)\"\n        tabindex=\"0\"></span>\n</div>\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { LabService } from '../../../core/services/lab.service';\nimport { LayoutMode } from '../../../models/enums/layout-mode';\n\n@Component({\n  selector: 'bd-layout-selector',\n  templateUrl: './layout-selector.component.html',\n  styleUrls: ['./layout-selector.component.scss'],\n})\nexport class LayoutSelectorComponent {\n  public layoutModes = [LayoutMode.Single, LayoutMode.BottomRight, LayoutMode.BottomLeft];\n\n  constructor(private readonly labService: LabService) {}\n\n  public setMode(mode: LayoutMode) {\n    this.labService.setLayoutMode(mode);\n  }\n\n  public isActive(layoutMode: LayoutMode) {\n    return this.labService.layoutModeChanged.pipe(map(({ mode }) => mode === layoutMode));\n  }\n}\n","<div class=\"playground-wrapper\"\n     [style.background-color]=\"backgroundColor$ | async\">\n  <div class=\"position-relative playground-body\"\n       [style.width.px]=\"artboardSize.width\"\n       [style.height.px]=\"artboardSize.height\">\n    <ng-container *ngFor=\"let position of (availablePositions$ | async)\">\n      <bd-playground-icon [icon]=\"getIcon(position) | async\"\n                          [position]=\"position\"\n                          [canRotate]=\"position !== IconPosition.Background\"></bd-playground-icon>\n    </ng-container>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { BackgroundService } from '../../../core/services/background.service';\nimport { LabService } from '../../../core/services/lab.service';\nimport { IconPosition } from '../../../models/enums/icon-position';\nimport { ImageHelper } from '../../../shared/helpers/image.helper';\n\n@Component({\n  selector: 'bd-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.scss'],\n})\nexport class PlaygroundComponent {\n  public IconPosition = IconPosition;\n  public availablePositions$ = this.labService.availablePositionsChanged;\n  public backgroundColor$ = this.backgroundService.backgroundColorChanged;\n  public get artboardSize() {\n    return ImageHelper.getArtboardSize(!!this.backgroundService.background);\n  }\n\n  constructor(private readonly labService: LabService, private readonly backgroundService: BackgroundService) {}\n\n  public getIcon(position: IconPosition) {\n    return this.labService.getIcon(position);\n  }\n}\n","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\n\nimport { LabService } from '../../../core/services/lab.service';\nimport { IconType } from '../../../models/enums/icon-type';\n\n@Component({\n  selector: 'bd-lab-actions',\n  templateUrl: './lab-actions.component.html',\n  styleUrls: ['./lab-actions.component.scss'],\n})\nexport class LabActionsComponent implements OnInit, OnDestroy {\n  @ViewChild('exportDropdown') public exportDropdown: ElementRef<HTMLDivElement>;\n\n  public exportDropdownOpened = false;\n  public IconType = IconType;\n  private listenerFn: () => void;\n\n  constructor(private readonly labService: LabService, private readonly renderer: Renderer2) {}\n\n  public ngOnInit() {\n    this.listenerFn = this.renderer.listen('window', 'click', (e: Event) => {\n      if (!e.composedPath().includes(this.exportDropdown.nativeElement)) {\n        this.exportDropdownOpened = false;\n      }\n    });\n  }\n\n  public ngOnDestroy() {\n    this.listenerFn();\n  }\n\n  public saveToGallery() {}\n\n  public export(type: IconType) {\n    this.labService.exportImage(type);\n  }\n}\n","<div class=\"d-flex justify-content-between p-3 lab-actions\">\n  <button class=\"btn\"\n          (click)=\"saveToGallery()\"\n          disabled>Save to Gallery</button>\n\n  <div class=\"dropdown dropdown-export\"\n       #exportDropdown>\n    <button class=\"btn btn-secondary dropdown-toggle\"\n            type=\"button\"\n            (click)=\"exportDropdownOpened = !exportDropdownOpened\">\n      Export\n    </button>\n    <ul class=\"dropdown-menu\"\n        [class.opened]=\"exportDropdownOpened\">\n      <li><a class=\"dropdown-item\"\n           (click)=\"export(IconType.Vector)\">Export SVG</a></li>\n      <li><a class=\"dropdown-item\"\n           (click)=\"export(IconType.Raster)\">Export PNG</a></li>\n    </ul>\n  </div>\n</div>\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n//# sourceMappingURL=coercion.js.map\n","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported.\n        if (typeof document !== 'object' || !document) {\n            scrollBehaviorSupported = false;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.parentNode.removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n//# sourceMappingURL=skip.js.map","import { NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","<h3 class=\"mb-2\">Recently used icons</h3>\n<section id=\"recently-used\"\n         class=\"d-flex align-items-center\">\n  <div class=\"d-flex align-items-center scroll\">\n    <bd-icon class=\"icon-wrapper\"\n             *ngFor=\"let icon of recentIcons$ | async as recentIcons; let i = index; trackBy: trackIconsFn\"\n             [icon]=\"icon\"\n             [title]=\"icon.name\"\n             (click)=\"setIcon(icon)\"></bd-icon>\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\nimport { LabService } from '../../../../../core/services/lab.service';\nimport { IconDto } from '../../../../../models/dto/icon-dto';\n\n@Component({\n  selector: 'bd-recently-used',\n  templateUrl: './recently-used.component.html',\n  styleUrls: ['./recently-used.component.scss'],\n})\nexport class RecentlyUsedComponent {\n  public recentIcons$ = this.labService.recentIconsChanged;\n\n  constructor(private readonly labService: LabService) {}\n\n  public trackIconsFn(_: number, item: IconDto) {\n    return item.id;\n  }\n\n  public setIcon(icon: IconDto) {\n    this.labService.setIcon(icon);\n  }\n}\n","<h2 class=\"dashed right\">Icon Library</h2>\n\n<form [formGroup]=\"searchForm\">\n  <bd-dropdown class=\"w-100 mb-3\"\n               placeholder=\"All Categories\"\n               formControlName=\"categoryId\"\n               [items]=\"categories$ | async\"\n               valueProp=\"id\"\n               labelProp=\"name\"></bd-dropdown>\n\n  <bd-search-input class=\"w-100 search-keyword\"\n                   placeholder=\"Search...\"\n                   formControlName=\"keyword\"></bd-search-input>\n</form>\n\n<span *ngIf=\"loading\"\n      class=\"spinner\"></span>\n\n<bd-recently-used></bd-recently-used>\n\n<ng-container *ngIf=\"(icons$ | async) as icons\">\n  <h3 class=\"mb-2\"\n      *ngIf=\"!loading\">{{icons.length}} {{DataHelper.hasUnit(icons.length) ? 'icon' : 'icons'}} available</h3>\n\n  <div class=\"icons-list-wrapper\">\n    <div class=\"d-flex flex-wrap icons-list\">\n      <div class=\"icon-item\"\n           *ngFor=\"let icon of icons; let i = index; trackBy: trackIconsFn\">\n        <bd-icon [icon]=\"icon\"\n                 [title]=\"icon.name\"\n                 (click)=\"setIcon(icon)\"></bd-icon>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { merge, Subject } from 'rxjs';\nimport { debounceTime, delay, distinctUntilChanged, filter, mergeMap, takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport { CategoryService } from '../../../../core/services/category.service';\nimport { IconService } from '../../../../core/services/icon.service';\nimport { LabService } from '../../../../core/services/lab.service';\nimport { LoadingService } from '../../../../core/services/loading.service';\nimport { IconDto } from '../../../../models/dto/icon-dto';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\nimport { TextHelper } from '../../../../shared/helpers/text.helper';\n\n@Component({\n  selector: 'bd-tab-icons',\n  templateUrl: './tab-icons.component.html',\n  styleUrls: ['./tab-icons.component.scss'],\n})\nexport class TabIconsComponent implements OnInit, OnDestroy {\n  public searchForm = this.fb.group({\n    keyword: this.iconService.getIconFilters().keyword,\n    categoryId: this.iconService.getIconFilters().categoryId,\n  });\n  public get keyword() {\n    return this.searchForm.controls.keyword;\n  }\n  public get categoryId() {\n    return this.searchForm.controls.categoryId;\n  }\n  public destroyed$ = new Subject<void>();\n  public icons$ = merge(\n    this.iconService.getIcons(this.searchForm.value),\n    merge(\n      this.keyword.valueChanges.pipe(\n        takeUntil(this.destroyed$),\n        filter((keyword: string) => !keyword || keyword.length !== 1),\n        debounceTime(TextHelper.DEFAULT_DEBOUNCE_TIME),\n        distinctUntilChanged()\n      ),\n      this.categoryId.valueChanges.pipe(takeUntil(this.destroyed$), distinctUntilChanged())\n    ).pipe(\n      delay(0), // wait until `this.searchForm` gets an updated value\n      mergeMap(() => this.iconService.getIcons(this.searchForm.value))\n    )\n  );\n  public loading = false;\n  public categories$ = this.categoryService.getCategories();\n  public DataHelper = DataHelper;\n\n  constructor(\n    private readonly iconService: IconService,\n    private readonly categoryService: CategoryService,\n    private readonly loadingService: LoadingService,\n    private readonly labService: LabService,\n    private readonly fb: FormBuilder\n  ) {}\n\n  public ngOnInit() {\n    this.loadingService.loadingSub\n      .pipe(takeUntil(this.destroyed$), delay(0))\n      .subscribe(\n        (loading) => (this.loading = loading && this.loadingService.loadingMap.has(`${environment.apiUrl}/icons`))\n      );\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public trackIconsFn(_: number, item: IconDto) {\n    return item.id;\n  }\n\n  public setIcon(icon: IconDto) {\n    this.labService.setIcon(icon);\n  }\n}\n","<h2 class=\"dashed right\">Backgrounds</h2>\n\n<span *ngIf=\"loading\"\n      class=\"spinner\"></span>\n\n<ng-container *ngIf=\"(backgrounds$ | async) as backgrounds\">\n  <h3 *ngIf=\"!loading\">{{backgrounds.length}} {{DataHelper.hasUnit(backgrounds.length) ? 'background' : 'backgrounds'}} available</h3>\n\n  <div class=\"backgrounds-list-wrapper\">\n    <div class=\"d-flex flex-wrap backgrounds-list\">\n      <button class=\"btn background-item\"\n              (click)=\"clearBackground()\">Clear</button>\n      <div class=\"background-item\"\n           *ngFor=\"let background of backgrounds; let i = index; trackBy: trackBackgroundsFn\">\n        <bd-icon [icon]=\"IconHelper.mapBackgroundToIcon(background)\"\n                 [large]=\"true\"\n                 [title]=\"background.name\"\n                 (click)=\"setBackground(background)\"></bd-icon>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { delay, takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport { BackgroundService } from '../../../../core/services/background.service';\nimport { LabService } from '../../../../core/services/lab.service';\nimport { LoadingService } from '../../../../core/services/loading.service';\nimport { BackgroundDto } from '../../../../models/dto/background-dto';\nimport { IconPosition } from '../../../../models/enums/icon-position';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\nimport { IconHelper } from '../../../../shared/helpers/icon.helper';\n\n@Component({\n  selector: 'bd-tab-backgrounds',\n  templateUrl: './tab-backgrounds.component.html',\n  styleUrls: ['./tab-backgrounds.component.scss'],\n})\nexport class TabBackgroundsComponent implements OnInit, OnDestroy {\n  public destroyed$ = new Subject<void>();\n  public backgrounds$ = this.backgroundService.getBackgrounds();\n  public loading = false;\n  public IconHelper = IconHelper;\n  public DataHelper = DataHelper;\n\n  constructor(\n    private readonly loadingService: LoadingService,\n    private readonly backgroundService: BackgroundService,\n    private readonly labService: LabService,\n  ) { }\n\n  public ngOnInit() {\n    this.loadingService.loadingSub\n      .pipe(takeUntil(this.destroyed$), delay(0))\n      .subscribe(\n        (loading) => (this.loading = loading && this.loadingService.loadingMap.has(`${environment.apiUrl}/backgrounds`))\n      );\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public trackBackgroundsFn(_: number, item: BackgroundDto) {\n    return item.id;\n  }\n\n  public setBackground(background: BackgroundDto) {\n    this.backgroundService.setBackground(background);\n  }\n\n  // TODO: improve\n  public clearBackground() {\n    this.backgroundService.setBackground(null);\n    this.labService.clearPositionSetting(IconPosition.Background);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { IconStyle } from '../../models/interfaces/icon-style';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconStyleService {\n  public get styleChanged() {\n    return this.style$.asObservable();\n  }\n\n  private style$ = new BehaviorSubject<IconStyle>(null);\n\n  public setStyle(style: IconStyle) {\n    if (this.isActive(style)) {\n      // the style is already active - do nothing\n      return;\n    }\n\n    this.style$.next(style);\n  }\n\n  public isActive(style: IconStyle) {\n    return this.style$.value?.id === style.id;\n  }\n}\n","<div *ngIf=\"style\"\n     class=\"d-flex align-items-end p-3 icon-style\"\n     [class.active]=\"isActive(style)\"\n     [style.background-image]=\"ImageHelper.getCssUrl(style.url)\"\n     tabindex=\"0\">\n  <h1 class=\"m-0\">{{style.name}}</h1>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { IconStyleService } from '../../../../../core/services/icon-style.service';\nimport { IconStyle } from '../../../../../models/interfaces/icon-style';\nimport { ImageHelper } from '../../../../../shared/helpers/image.helper';\n\n@Component({\n  selector: 'bd-icon-style',\n  templateUrl: './icon-style.component.html',\n  styleUrls: ['./icon-style.component.scss'],\n})\nexport class IconStyleComponent {\n  @Input() public style: IconStyle;\n  @Input() public active = false;\n  public ImageHelper = ImageHelper;\n\n  constructor(private readonly iconStyleService: IconStyleService) {}\n\n  public isActive(style: IconStyle) {\n    return this.iconStyleService.isActive(style);\n  }\n}\n","<h2 class=\"dashed right\">Icon Styles</h2>\n\n<ng-container *ngIf=\"styles\">\n  <h3>{{styles.length}} {{DataHelper.hasUnit(styles.length) ? 'style' : 'styles'}} available</h3>\n\n  <div class=\"styles-list-wrapper\">\n    <div class=\"d-flex flex-wrap styles-list\">\n      <div class=\"mb-2 style-item\"\n           *ngFor=\"let style of styles; let i = index; trackBy: trackStylesFn\">\n        <bd-icon-style [style]=\"style\"\n                       [active]=\"true\"\n                       (click)=\"setStyle(style)\"></bd-icon-style>\n      </div>\n      <div class=\"d-flex justify-content-center align-items-center style-item style-item-more\">\n        <h3 class=\"m-0\">More styles are coming Soon...</h3>\n      </div>\n\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { IconStyleService } from '../../../../core/services/icon-style.service';\n\nimport { IconStyle } from '../../../../models/interfaces/icon-style';\nimport { DataHelper } from '../../../../shared/helpers/data.helper';\n\n@Component({\n  selector: 'bd-tab-styles',\n  templateUrl: './tab-styles.component.html',\n  styleUrls: ['./tab-styles.component.scss'],\n})\nexport class TabStylesComponent implements OnInit {\n  public styles: IconStyle[] = [\n    {\n      id: 'some-id',\n      name: 'Bubbly Icons',\n      url: 'https://img.icon-lab.co/styles/bubbly-icons.png',\n    },\n  ];\n  public DataHelper = DataHelper;\n\n  constructor(private readonly iconStyleService: IconStyleService) {}\n\n  public ngOnInit() {\n    // TODO: check if we still need this\n    this.setStyle(this.styles[0]);\n  }\n\n  public trackStylesFn(_: number, item: IconStyle) {\n    return item.id;\n  }\n\n  public setStyle(style: IconStyle) {\n    this.iconStyleService.setStyle(style);\n  }\n}\n","<aside class=\"d-flex flex-column sidebar-wrapper\"\n       (click)=\"toggleRightSidebar(true)\">\n  <div class=\"content-wrapper flex-shrink-1\">\n    <ng-container *ngIf=\"(hasIconPosition$ | async) || (hasBackgroundPosition$ | async); else selectStyles\">\n      <bd-tab-icons *ngIf=\"hasIconPosition$ | async\"></bd-tab-icons>\n      <bd-tab-backgrounds *ngIf=\"hasBackgroundPosition$ | async\"></bd-tab-backgrounds>\n    </ng-container>\n    <ng-template #selectStyles>\n      <bd-tab-styles></bd-tab-styles>\n    </ng-template>\n  </div>\n</aside>\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, HostBinding, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { LabService } from '../../../core/services/lab.service';\n\nimport { LayoutService } from '../../../core/services/layout.service';\nimport { IconPosition } from '../../../models/enums/icon-position';\nimport { TabId } from '../../../models/enums/tab-id';\nimport { NavTab } from '../../../models/interfaces/nav-tab';\n\n@Component({\n  selector: 'bd-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n})\nexport class RightSidebarComponent implements OnInit, OnDestroy {\n  @HostBinding('class.right-sidebar') private hostClass = true;\n\n  public labTabs: NavTab[] = [\n    {\n      id: TabId.Icons,\n      title: 'Icons',\n      active: true,\n    },\n    {\n      id: TabId.Avatars,\n      title: 'Avatars',\n    },\n  ];\n  public activeTabId: TabId;\n  public TabId = TabId;\n  public hasIconPosition$ = this.labService.hasIconPosition$;\n  public hasBackgroundPosition$ = this.labService.hasBackgroundPosition$;\n  private isLargeScreen = this.breakpointObserver.isMatched(this.layoutSevice.MEDIA_QUERIES.largeScreen);\n  private destroyed$ = new Subject<void>();\n  private listenerFn: () => void;\n\n  constructor(\n    private readonly breakpointObserver: BreakpointObserver,\n    private readonly renderer: Renderer2,\n    private readonly layoutSevice: LayoutService,\n    private readonly labService: LabService\n  ) {}\n\n  public ngOnInit() {\n    this.listenerFn = this.renderer.listen('window', 'click', (e: Event) => {\n      if (\n        !this.isLargeScreen &&\n        !e.composedPath().some((el) => (el as Element)?.classList?.contains('right-sidebar'))\n      ) {\n        this.layoutSevice.toggleRightSidebar(false);\n      }\n    });\n\n    this.breakpointObserver\n      .observe(this.layoutSevice.MEDIA_QUERIES.largeScreen)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((state) => {\n        this.isLargeScreen = state.matches;\n        this.layoutSevice.toggleRightSidebar(this.isLargeScreen);\n      });\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n    this.listenerFn();\n  }\n\n  public onTabChange(tabId: TabId) {\n    this.activeTabId = tabId;\n  }\n\n  public toggleRightSidebar(state: boolean) {\n    this.layoutSevice.toggleRightSidebar(state);\n  }\n}\n","<div class=\"d-flex justify-content-between align-items-stretch position-relative overflow-hidden lab-viewport\">\n  <div class=\"d-flex flex-column justify-content-between flex-grow-1 lab-wrapper\"\n       [class.has-opened-sidebar]=\"hasOpenedRightSidebar$ | async\">\n    <bd-text-input [formControl]=\"iconName\"\n                   placeholder=\"Please enter the icon name...\"\n                   cssClass=\"w-100\"></bd-text-input>\n\n    <div class=\"d-flex align-items-center\">\n      <bd-layout-selector class=\"layout-selector\"></bd-layout-selector>\n      <bd-playground class=\"playground\"></bd-playground>\n\n      <div class=\"d-flex flex-column flex-grow-1\">\n        <ng-container *ngIf=\"hasSelectedIcon$ | async\">\n          <h3 class=\"dashed right color-picker-heading\">Selection Colors</h3>\n\n          <ng-container *ngIf=\"hasSelectedVectorIcon$ | async; else rasterIconInfo\">\n            <bd-color-picker *ngFor=\"let selectedColor of selectedColorControls\"\n                             class=\"mb-2\"\n                             [formControl]=\"selectedColor\"\n                             [savedColors]=\"savedColors$ | async\"\n                             (addToSaved)=\"addToSaved(selectedColor.value)\"\n                             (removeFromSaved)=\"removeFromSaved(selectedColor.value)\"\n                             (savedColorsChanged)=\"replaceSaved($event)\"></bd-color-picker>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"(hasBackgroundPosition$ | async) === false && (hasSelectedIcon$ | async) === false\">\n          <span class=\"font-italic icon-info-text\">Select the icon you want to change.</span>\n        </ng-container>\n\n        <ng-template #rasterIconInfo>\n          <span class=\"font-weight-bold icon-info-text\">Raster icons cannot be modified.</span>\n        </ng-template>\n      </div>\n    </div>\n\n    <bd-lab-actions></bd-lab-actions>\n\n    <!-- TODO: Remove preview container -->\n    <div class=\"position-absolute d-inline-block lab-wrapper-preview\"\n         style=\"opacity: 0.5\"></div>\n\n    <bd-footer class=\"d-flex d-xl-none mx-auto\"\n               [showLogo]=\"true\"></bd-footer>\n  </div>\n\n  <bd-right-sidebar [class.sidebar-hidden]=\"(hasOpenedRightSidebar$ | async) === false\"></bd-right-sidebar>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LabComponent } from './lab.component';\n\nconst routes: Routes = [{ path: '', component: LabComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LabRoutingModule { }\n","import { Component, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FormArray, FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { delay, filter, map, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { BackgroundService } from '../../core/services/background.service';\nimport { LabService } from '../../core/services/lab.service';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { IconType } from '../../models/enums/icon-type';\n\n@Component({\n  selector: 'bd-lab',\n  templateUrl: './lab.component.html',\n  styleUrls: ['./lab.component.scss'],\n})\nexport class LabComponent implements OnInit, OnDestroy {\n  public selectedIcon$ = this.labService.positionChanged.pipe(\n    switchMap((position) => this.labService.getIcon(position))\n  );\n  public hasSelectedIcon$ = this.selectedIcon$.pipe(map((icon) => !!icon));\n  public hasSelectedVectorIcon$ = this.selectedIcon$.pipe(map((icon) => icon?.type === IconType.Vector));\n  public hasBackgroundPosition$ = this.labService.hasBackgroundPosition$;\n  public savedColors$ = this.labService.savedColorsChanged;\n  public get selectedColorControls() {\n    return this.selectedColors.controls as FormControl[];\n  }\n  public iconName = new FormControl();\n  public backgroundColor$ = this.backgroundService.backgroundColorChanged;\n  // we cannot use [class.xxx] binding in the right sidebar, as we deal with the host element there\n  public hasOpenedRightSidebar$ = this.layoutService.openedRightSidebar.pipe(delay(0));\n  private selectedColors = new FormArray([]);\n  private destroyed$ = new Subject<void>();\n  private unselectPositionListenerFn: () => void;\n\n  constructor(\n    private readonly labService: LabService,\n    private readonly backgroundService: BackgroundService,\n    private readonly layoutService: LayoutService,\n    private readonly renderer: Renderer2\n  ) { }\n\n  public ngOnInit() {\n    this.labService.filledElementsChanged\n      .pipe(\n        takeUntil(this.destroyed$),\n        filter((filledElements) => !!filledElements)\n      )\n      .subscribe((filledElements) => {\n        this.selectedColors.clear();\n\n        filledElements.forEach(({ color, index }) => {\n          const contol = new FormControl(color);\n\n          this.selectedColors.push(contol);\n          this.initColorListener(contol, index);\n        });\n      });\n\n    this.labService.iconChanged.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      this.labService.clearColors();\n    });\n\n    this.initIconNameHandler();\n\n    this.unselectPositionListenerFn = this.renderer.listen('window', 'keydown.escape', () => {\n      this.labService.unsetPosition();\n    });\n  }\n\n  public ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n    this.unselectPositionListenerFn();\n  }\n\n  public addToSaved(color: string) {\n    this.labService.addToSavedColors(color);\n  }\n\n  public removeFromSaved(color: string) {\n    this.labService.removeFromSavedColors(color);\n  }\n\n  public replaceSaved(colors: string[]) {\n    this.labService.replaceSavedColors(colors);\n  }\n\n  private initColorListener(control: FormControl, index: string) {\n    control.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((color: string) => this.labService.setColor(color, index));\n  }\n\n  private initIconNameHandler() {\n    this.iconName.valueChanges\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((iconName) => (this.labService.artboardName = iconName));\n    this.iconName.setValue('icon-name');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LabRoutingModule } from './lab-routing.module';\nimport { LabComponent } from './lab.component';\nimport { RightSidebarComponent } from './right-sidebar/right-sidebar.component';\nimport { PlaygroundComponent } from './playground/playground.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { TabIconsComponent } from './right-sidebar/tab-icons/tab-icons.component';\nimport { TabAvatarsComponent } from './right-sidebar/tab-avatars/tab-avatars.component';\nimport { LayoutSelectorComponent } from './layout-selector/layout-selector.component';\nimport { RecentlyUsedComponent } from './right-sidebar/tab-icons/recently-used/recently-used.component';\nimport { LabActionsComponent } from './lab-actions/lab-actions.component';\nimport { TabBackgroundsComponent } from './right-sidebar/tab-backgrounds/tab-backgrounds.component';\nimport { TabStylesComponent } from './right-sidebar/tab-styles/tab-styles.component';\nimport { IconStyleComponent } from './right-sidebar/tab-styles/icon-style/icon-style.component';\n\n@NgModule({\n  declarations: [\n    LabComponent,\n    RightSidebarComponent,\n    PlaygroundComponent,\n    TabIconsComponent,\n    TabBackgroundsComponent,\n    TabAvatarsComponent,\n    LayoutSelectorComponent,\n    RecentlyUsedComponent,\n    LabActionsComponent,\n    TabStylesComponent,\n    IconStyleComponent,\n  ],\n  imports: [CommonModule, LabRoutingModule, SharedModule],\n})\nexport class LabModule {}\n"]}