{"version":3,"file":"common.f47474766144d565.js","mappings":"iKAWO,IAAMA,EAAb,MAAM,QAGJC,YAA6BC,qBAEtBC,cAAcC,GAAc,GACjC,OAAIC,KAAKC,iBAAmBF,IAI5BC,KAAKC,eAAiBD,KAAKH,WACxBK,IAAmB,GAAGC,yBACtBC,MAAKC,OAAY,IAAIA,OAAY,CAAEC,UAAU,MALvCN,KAAKC,cAMFA,CAGPM,cAAcC,GACnB,OAAOR,KAAKH,WAAWY,MAAY,GAAGN,wBAAiC,CAAEK,aAGpEE,YAAYF,GACjB,OAAOR,KAAKH,WAAWc,KAAkB,GAAGR,wBAAiC,CAAEK,aAG1EI,eAAeC,GACpB,OAAOb,KAAKH,WAAWiB,OAAa,GAAGX,yBAAiCU,mDAzB/DlB,GAAeoB,wCAAfpB,EAAeqB,QAAfrB,EAAe,qBAFd,SAEDA,GAAb,EAAaA,kCCXN,IAAKsB,EASX,MATD,OAAYA,QAAK,KACfA,mBACAA,yBACAA,mBACAA,uCACAA,+CACAA,mDACAA,yCACAA,mCARUA,EAAZ,IAAYA,GASX,EATWA,sDCEL,WAAsBC,EAASC,EAAYC,KAC9C,OAAQC,GAAWA,EAAOC,KAAK,IAAIC,EAAqBL,EAASC,IAErE,QACIvB,YAAYsB,EAASC,GACjBnB,KAAKkB,QAAUA,EACflB,KAAKmB,UAAYA,EAErBK,KAAKC,EAAYJ,GACb,OAAOA,EAAOK,UAAU,IAAIC,EAAuBF,EAAYzB,KAAKkB,QAASlB,KAAKmB,aAG1F,gBAAqCS,IACjChC,YAAYiC,EAAaX,EAASC,GAC9BW,MAAMD,GACN7B,KAAKkB,QAAUA,EACflB,KAAKmB,UAAYA,EACjBnB,KAAK+B,sBAAwB,KAC7B/B,KAAKgC,UAAY,KACjBhC,KAAKiC,UAAW,EAEpBC,MAAMC,GACFnC,KAAKoC,gBACLpC,KAAKgC,UAAYG,EACjBnC,KAAKiC,UAAW,EAChBjC,KAAKqC,IAAIrC,KAAK+B,sBAAwB/B,KAAKmB,UAAUmB,SAASC,EAAcvC,KAAKkB,QAASlB,OAE9FwC,YACIxC,KAAKyC,gBACLzC,KAAK6B,YAAYa,WAErBD,gBAEI,GADAzC,KAAKoC,gBACDpC,KAAKiC,SAAU,CACf,MAAQD,aAAchC,KACtBA,KAAKgC,UAAY,KACjBhC,KAAKiC,UAAW,EAChBjC,KAAK6B,YAAYc,KAAKX,IAG9BI,gBACI,MAAML,EAAwB/B,KAAK+B,sBACL,OAA1BA,IACA/B,KAAK4C,OAAOb,GACZA,EAAsBc,cACtB7C,KAAK+B,sBAAwB,OAIzC,WAAsBN,GAClBA,EAAWgB,8DCnDR,WAA8BK,EAASC,GAC1C,OAAQ1B,GAAWA,EAAOC,KAAK,IAAI0B,EAA6BF,EAASC,IAE7E,QACInD,YAAYkD,EAASC,GACjB/C,KAAK8C,QAAUA,EACf9C,KAAK+C,YAAcA,EAEvBvB,KAAKC,EAAYJ,GACb,OAAOA,EAAOK,UAAU,IAAIuB,EAA+BxB,EAAYzB,KAAK8C,QAAS9C,KAAK+C,eAGlG,gBAA6CnB,IACzChC,YAAYiC,EAAaiB,EAASC,GAC9BjB,MAAMD,GACN7B,KAAK+C,YAAcA,EACnB/C,KAAKkD,QAAS,EACS,mBAAZJ,IACP9C,KAAK8C,QAAUA,GAGvBA,QAAQK,EAAGC,GACP,OAAOD,IAAMC,EAEjBlB,MAAMC,GACF,IAAIkB,EACJ,IACI,MAAQN,eAAgB/C,KACxBqD,EAAMN,EAAcA,EAAYZ,GAASA,CAGXmB,CAHWnB,MAEtCmB,GACH,OAAOtD,KAAK6B,YAAY0B,MAAMD,GAElC,IAAIE,GAAS,EACb,GAAIxD,KAAKkD,OACL,IACI,MAAQJ,WAAY9C,KACpBwD,EAASV,EAAQ9C,KAAKqD,IAAKA,EAGGC,CAHHD,MAExBC,GACH,OAAOtD,KAAK6B,YAAY0B,MAAMD,QAIlCtD,KAAKkD,QAAS,EAEbM,IACDxD,KAAKqD,IAAMA,EACXrD,KAAK6B,YAAYc,KAAKR,oDC9C3B,MAAMf,EADiB,YAAIqC,GAAeC","names":["CategoryService","constructor","httpClient","getCategories","forceReload","this","getCategories$","get","environment","pipe","shareReplay","refCount","patchCategory","category","patch","addCategory","post","deleteCategory","categoryId","delete","i0","factory","TabId","dueTime","scheduler","async","source","lift","DebounceTimeOperator","call","subscriber","subscribe","DebounceTimeSubscriber","Subscriber","destination","super","debouncedSubscription","lastValue","hasValue","_next","value","clearDebounce","add","schedule","dispatchNext","_complete","debouncedNext","complete","next","remove","unsubscribe","compare","keySelector","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","x","y","key","err","error","result","AsyncScheduler","AsyncAction"],"sourceRoot":"webpack:///","sources":["./src/app/core/services/category.service.ts","./src/app/models/enums/tab-id.ts","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { CategoryDto } from '../../models/dto/category-dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  private getCategories$: Observable<CategoryDto[]>;\n\n  constructor(private readonly httpClient: HttpClient) {}\n\n  public getCategories(forceReload = false) {\n    if (this.getCategories$ && !forceReload) {\n      return this.getCategories$;\n    }\n\n    this.getCategories$ = this.httpClient\n      .get<CategoryDto[]>(`${environment.apiUrl}/categories`)\n      .pipe(shareReplay(1), shareReplay({ refCount: true }));\n    return this.getCategories$;\n  }\n\n  public patchCategory(category: Partial<CategoryDto>) {\n    return this.httpClient.patch<void>(`${environment.apiUrl}/categories`, { category });\n  }\n\n  public addCategory(category: CategoryDto) {\n    return this.httpClient.post<CategoryDto>(`${environment.apiUrl}/categories`, { category });\n  }\n\n  public deleteCategory(categoryId: string) {\n    return this.httpClient.delete<void>(`${environment.apiUrl}/categories/${categoryId}`);\n  }\n}\n","export enum TabId {\n  Icons,\n  Avatars,\n  Test,\n  IconManagement,\n  CategoryManagement,\n  BackgroundManagement,\n  IconsBulkUpload,\n  BgBulkUpload,\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n}\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        let key;\n        try {\n            const { keySelector } = this;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        let result = false;\n        if (this.hasKey) {\n            try {\n                const { compare } = this;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n"]}